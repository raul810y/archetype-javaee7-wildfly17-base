<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>miproyecto</artifactId>
		<groupId>mx.gob.cdmx.adip</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>miproyecto-web</artifactId>
	<packaging>war</packaging>

	<name>miproyecto: WAR Module</name>

	<url>http://www.cdmx.gob.mx</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Raul Soto</name>
			<email>raul810@hotmail.com</email>
		</developer>
	</developers>

	<dependencies>

		<!-- Dependency on the COMMONS module so we can use it's services if needed -->
		<dependency>
			<groupId>mx.gob.cdmx.adip</groupId>
			<artifactId>miproyecto-commons</artifactId>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>

		<!-- Dependency on the EJB module so we can use it's services if needed -->
		<dependency>
			<groupId>mx.gob.cdmx.adip</groupId>
			<artifactId>miproyecto-ejb</artifactId>
			<type>ejb</type>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss WildFly Internamente Wildfly 17 utiliza CDI-API-2.0.SP1 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.3_spec</artifactId>
			<version>2.3.9.SP02</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_4.0_spec</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss WildFly -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss WildFly -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSF utility library, not a JSF UI/component library. Para JSF 2.2 
			se necesita la version de omnifaces 2.x, para JSF 2.3 se puede ocupar omnifaces 
			3.x Se utiliza para FullAjaxExceptionHandler -->
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>omnifaces</artifactId>
			<version>2.7</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.22.jbossorg-1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<version>3.4.0.Final</version>
			<scope>provided</scope>
		</dependency>

		<!--  Librería para crear y leer JSon -->
		<dependency>
			<groupId>javax.json</groupId>
			<artifactId>javax.json-api</artifactId>
			<version>1.1.2</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<repositories>
		<!-- Del repositorio central de Maven se obtienen las librerias de Omnifaces 
			y sus dependencias -->
		<repository>
			<id>central2</id>
			<name>Maven central</name>
			<url>http://central.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<!-- Del repositorio de RedHat 3rd Party se obtienen las librerias de Wildfly -->
		<repository>
			<id>redhat3erparty</id>
			<name>RedHat 3rd party</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<repository>
			<id>redhat jboss GA</id>
			<name>RedHat 3rd party</name>
			<url>https://maven.repository.redhat.com/ga/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

	</repositories>


	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Se activa el filtrado Maven en la carpeta resources del modulo 
						WEB. Con esto, Maven sustituira los valores del archivo src/main/webapp/WEB-INF/web.xml 
						con los definidos en este pom.xml -->
					<webResources>
						<resource>
							<directory>${basedir}/src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>WEB-INF/web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Con el siguiente plugin, en tiempo de construcción del war, se copian 
				TODOS los archivos que esten dentro de la carpeta resources Para ello, se 
				reqiere configurar en <resources> las carpetas y archivos a copiar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${version.resources.plugin}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>

		<!-- Como complemento al plugin org.apache.maven.plugins, se debe indicar 
			cual es la carpeta de recursos, ya que el plugin de maven por default toma 
			la ruta src/main/resources. Posteriormente, se indican los archivos a incluir. 
			En este caso, se indica que incluya todas las subcarpetas ** dentro de css 
			y a su vez que incluya todos los archivos * de dichas subcarpetas -->
		<resources>
			<resource>
				<directory>src/main/webapp/resources</directory>
				<includes>
					<include>css/**/*</include>
					<include>js/**/*</include>
					<include>messages/**/*</include>
				</includes>
			</resource>
		</resources>

	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<app.cookieconfig.httponly>false</app.cookieconfig.httponly>
				<app.cookieconfig.secure>false</app.cookieconfig.secure>
			</properties>
		</profile>

		<profile>
			<id>qa</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<app.cookieconfig.httponly>true</app.cookieconfig.httponly>
				<app.cookieconfig.secure>true</app.cookieconfig.secure>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<app.cookieconfig.httponly>true</app.cookieconfig.httponly>
				<app.cookieconfig.secure>true</app.cookieconfig.secure>
			</properties>
		</profile>

	</profiles>

</project>
